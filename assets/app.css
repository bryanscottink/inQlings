/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
.visible {
  visibility: visible;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.top-full {
  top: 100%;
}
.left-1\/2 {
  left: calc(1/2 * 100%);
}
.isolate {
  isolation: isolate;
}
.z-0 {
  z-index: 0;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.mr-auto {
  margin-right: auto;
}
.ml-auto {
  margin-left: auto;
}
.block {
  display: block;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.h-\[16px\] {
  height: 16px;
}
.h-\[550px\] {
  height: 550px;
}
.h-fit {
  height: fit-content;
}
.h-full {
  height: 100%;
}
.min-h-\[60px\] {
  min-height: 60px;
}
.w-1\/2 {
  width: calc(1/2 * 100%);
}
.w-11\/12 {
  width: calc(11/12 * 100%);
}
.w-full {
  width: 100%;
}
.max-w-\[86px\] {
  max-width: 86px;
}
.max-w-\[530px\] {
  max-width: 530px;
}
.flex-1 {
  flex: 1;
}
.grow {
  flex-grow: 1;
}
.origin-center {
  transform-origin: center;
}
.-translate-x-1\/2 {
  --tw-translate-x: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-\[5px\] {
  --tw-translate-x: calc(5px * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-rotate-90 {
  rotate: calc(90deg * -1);
}
.rotate-90 {
  rotate: 90deg;
}
.rotate-180 {
  rotate: 180deg;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.resize {
  resize: both;
}
.flex-col {
  flex-direction: column;
}
.flex-nowrap {
  flex-wrap: nowrap;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.overflow-hidden {
  overflow: hidden;
}
.rounded-\[10px\] {
  border-radius: 10px;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-dashed {
  --tw-border-style: dashed;
  border-style: dashed;
}
.bg-\[\#c9c9c9\] {
  background-color: #c9c9c9;
}
.bg-\[rgb\(var\(--colors-line-and-border\)\)\] {
  background-color: rgb(var(--colors-line-and-border));
}
.object-cover {
  object-fit: cover;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.align-middle {
  vertical-align: middle;
}
.break-words {
  overflow-wrap: break-word;
}
.text-\[\#acacac\] {
  color: #acacac;
}
.text-\[rgb\(var\(--colors-icon-rating\)\)\] {
  color: rgb(var(--colors-icon-rating));
}
.text-\[rgb\(var\(--colors-text\)\)\] {
  color: rgb(var(--colors-text));
}
.text-\[rgba\(var\(--color-error\,225\,43\,40\)\)\] {
  color: rgba(var(--color-error,225,43,40));
}
.text-current {
  color: currentcolor;
}
.capitalize {
  text-transform: capitalize;
}
.uppercase {
  text-transform: uppercase;
}
.italic {
  font-style: italic;
}
.underline {
  text-decoration-line: underline;
}
.opacity-0 {
  opacity: 0%;
}
.opacity-60 {
  opacity: 60%;
}
.opacity-70 {
  opacity: 70%;
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.selection\:bg-\[rgba\(var\(--image-treatment-text\)\,0\.2\)\] {
  & *::selection {
    background-color: rgba(var(--image-treatment-text),0.2);
  }
  &::selection {
    background-color: rgba(var(--image-treatment-text),0.2);
  }
}
.before\:block {
  &::before {
    content: var(--tw-content);
    display: block;
  }
}
.before\:pb-\[100\%\] {
  &::before {
    content: var(--tw-content);
    padding-bottom: 100%;
  }
}
.after\:absolute {
  &::after {
    content: var(--tw-content);
    position: absolute;
  }
}
.after\:top-1\/2 {
  &::after {
    content: var(--tw-content);
    top: calc(1/2 * 100%);
  }
}
.after\:-z-10 {
  &::after {
    content: var(--tw-content);
    z-index: calc(10 * -1);
  }
}
.after\:h-\[50\%\] {
  &::after {
    content: var(--tw-content);
    height: 50%;
  }
}
.after\:-translate-y-1\/2 {
  &::after {
    content: var(--tw-content);
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.after\:border {
  &::after {
    content: var(--tw-content);
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
}
.after\:border-l {
  &::after {
    content: var(--tw-content);
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
}
.after\:border-l-0 {
  &::after {
    content: var(--tw-content);
    border-left-style: var(--tw-border-style);
    border-left-width: 0px;
  }
}
.after\:text-\[20px\] {
  &::after {
    content: var(--tw-content);
    font-size: 20px;
  }
}
.last\:after\:border-l-0 {
  &:last-child {
    &::after {
      content: var(--tw-content);
      border-left-style: var(--tw-border-style);
      border-left-width: 0px;
    }
  }
}
.empty\:hidden {
  &:empty {
    display: none;
  }
}
.hover\:cursor-not-allowed {
  &:hover {
    @media (hover: hover) {
      cursor: not-allowed;
    }
  }
}
.hover\:text-\[color\:rgba\(var\(--colors-text-link\)\)\] {
  &:hover {
    @media (hover: hover) {
      color: rgba(var(--colors-text-link));
    }
  }
}
.hover\:opacity-100 {
  &:hover {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.disabled\:cursor-not-allowed {
  &:disabled {
    cursor: not-allowed;
  }
}
.disabled\:opacity-30 {
  &:disabled {
    opacity: 30%;
  }
}
.rtl\:right-auto {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    right: auto;
  }
}
.rtl\:left-auto {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    left: auto;
  }
}
.rtl\:-rotate-90 {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    rotate: calc(90deg * -1);
  }
}
.rtl\:rotate-90 {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    rotate: 90deg;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-content: "";
    }
  }
}
